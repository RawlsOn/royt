# Generated by Django 3.2 on 2023-08-09 19:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article경기도',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article서울시',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article인천시',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article인천시History',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_set', to='core.article인천시')),
            ],
        ),
        migrations.CreateModel(
            name='Article서울시History',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_set', to='core.article서울시')),
            ],
        ),
        migrations.CreateModel(
            name='Article경기도History',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('article_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('lgeo', models.CharField(blank=True, max_length=16, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('build_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vrfcTpCd', models.CharField(blank=True, max_length=16, null=True)),
                ('rletTpNm', models.CharField(blank=True, max_length=32, null=True)),
                ('확인날짜', models.DateField(blank=True, null=True)),
                ('중요설명', models.CharField(blank=True, max_length=255, null=True)),
                ('종류', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('거래타입', models.CharField(blank=True, db_index=True, max_length=8, null=True)),
                ('cortarNo', models.CharField(blank=True, max_length=16, null=True)),
                ('방향', models.CharField(blank=True, max_length=16, null=True)),
                ('lat', models.CharField(blank=True, max_length=16, null=True)),
                ('lng', models.CharField(blank=True, max_length=16, null=True)),
                ('면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('공급면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용면적_평', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('전용률', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('층', models.SmallIntegerField(blank=True, null=True)),
                ('한글층', models.CharField(blank=True, max_length=8, null=True)),
                ('총층', models.SmallIntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, db_index=True, null=True)),
                ('sido', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('sgg', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('emd', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('jb', models.CharField(blank=True, max_length=16, null=True)),
                ('bad_jb', models.CharField(blank=True, max_length=255, null=True)),
                ('juso', models.CharField(blank=True, max_length=64, null=True)),
                ('tagList', models.CharField(blank=True, max_length=255, null=True)),
                ('is_live', models.BooleanField(db_index=True, default=False)),
                ('is_live_checked_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('매매가', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('보증금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('융자금', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('임대료', models.PositiveBigIntegerField(blank=True, db_index=True, null=True)),
                ('기보증금', models.PositiveBigIntegerField(blank=True, null=True)),
                ('기월세', models.PositiveBigIntegerField(blank=True, null=True)),
                ('관리비', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('공급면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('전용면적_평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_매매가', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_보증금', models.PositiveIntegerField(blank=True, null=True)),
                ('평당_임대료', models.PositiveIntegerField(blank=True, null=True)),
                ('난방1', models.CharField(blank=True, max_length=16, null=True)),
                ('난방2', models.CharField(blank=True, max_length=16, null=True)),
                ('방수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('욕실수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('총_주차대수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('주차가능여부', models.BooleanField(blank=True, null=True)),
                ('건축물_용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_주용도', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_총_가구', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('대장_지역', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_지구', models.CharField(blank=True, max_length=16, null=True)),
                ('대장_구역', models.CharField(blank=True, max_length=16, null=True)),
                ('건물_사용승인일', models.DateField(blank=True, null=True)),
                ('건물_층정보_지하', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_층정보_지상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥내', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_주차장_옥외', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_비상', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('건물_엘레베이터_승용', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('보안시설', models.CharField(blank=True, max_length=64, null=True)),
                ('기타시설', models.CharField(blank=True, max_length=64, null=True)),
                ('냉방시설', models.CharField(blank=True, max_length=64, null=True)),
                ('생활시설', models.CharField(blank=True, max_length=64, null=True)),
                ('방범창_베란다', models.CharField(blank=True, max_length=16, null=True)),
                ('상세설명', models.TextField(blank=True, null=True)),
                ('토지_지역', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_현재용도', models.CharField(blank=True, max_length=64, null=True)),
                ('토지_진입도로', models.BooleanField(blank=True, null=True)),
                ('기타주소', models.CharField(blank=True, max_length=255, null=True)),
                ('노출시작일', models.DateField(blank=True, null=True)),
                ('노출종료일', models.DateField(blank=True, null=True)),
                ('pnu', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('pnu_processed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('입주타입', models.CharField(blank=True, max_length=16, null=True)),
                ('입주가능일', models.DateField(blank=True, null=True)),
                ('현관구조', models.CharField(blank=True, max_length=16, null=True)),
                ('건설사', models.CharField(blank=True, max_length=32, null=True)),
                ('지하철역_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('버스정류장_갯수', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('지하철역_도보시간_분', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('type1', models.CharField(blank=True, max_length=16, null=True)),
                ('type2', models.CharField(blank=True, max_length=16, null=True)),
                ('type3', models.CharField(blank=True, max_length=16, null=True)),
                ('type4', models.CharField(blank=True, max_length=16, null=True)),
                ('articleStatusCode', models.CharField(blank=True, max_length=16, null=True)),
                ('articleTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('lawUsage', models.CharField(blank=True, max_length=32, null=True)),
                ('moveInDiscussionPossibleYN', models.BooleanField(blank=True, null=True)),
                ('moveInPossibleYmd', models.DateField(blank=True, null=True)),
                ('moveInTypeCode', models.CharField(blank=True, max_length=16, null=True)),
                ('parkingCount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parkingPossibleYN', models.BooleanField(blank=True, null=True)),
                ('has_detail_text', models.BooleanField(db_index=True, default=False)),
                ('detail_text', models.TextField(blank=True, null=True)),
                ('is_detail_processed', models.BooleanField(db_index=True, default=False)),
                ('is_detail_failed', models.BooleanField(db_index=True, default=False)),
                ('detail_processed_at', models.DateTimeField(blank=True, null=True)),
                ('has_sel_text', models.BooleanField(db_index=True, default=False)),
                ('sel_text', models.TextField(blank=True, null=True)),
                ('is_sel_processed', models.BooleanField(db_index=True, default=False)),
                ('sel_processed_at', models.DateTimeField(blank=True, null=True)),
                ('dev_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo2', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_memo3', models.CharField(blank=True, max_length=255, null=True)),
                ('gijun_date', models.DateField(blank=True, db_index=True, null=True)),
                ('gijun_date_str', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_set', to='core.article경기도')),
            ],
        ),
        migrations.AddConstraint(
            model_name='article인천시history',
            constraint=models.UniqueConstraint(fields=('article_id', 'gijun_date'), name='unique_article_id_gijun_date_인천시'),
        ),
        migrations.AddConstraint(
            model_name='article서울시history',
            constraint=models.UniqueConstraint(fields=('article_id', 'gijun_date'), name='unique_article_id_gijun_date_서울시'),
        ),
        migrations.AddConstraint(
            model_name='article경기도history',
            constraint=models.UniqueConstraint(fields=('article_id', 'gijun_date'), name='unique_article_id_gijun_date_경기도'),
        ),
    ]
